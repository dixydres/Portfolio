---
import { siteConfig } from "../consts";

export interface Props {
    title: string;
    description?: string;
    image?: string;
}

const {
    title,
    description = siteConfig.description,
    image = "/Portfolio/Muller_Photo.jpeg",
} = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/jpeg" href="/Portfolio/Muller_Photo.jpeg" />
<link rel="apple-touch-icon" href="/Portfolio/Muller_Photo.jpeg" />

<!-- Asset path handling -->
<script is:inline>
    window.portfolioBase = "/Portfolio";

    function fixAssetPath(url) {
        if (
            !url ||
            url.startsWith("http") ||
            url.startsWith("data:") ||
            url.startsWith("blob:") ||
            url.startsWith("mailto:") ||
            url.startsWith("#")
        ) {
            return url;
        }

        // Clean up the URL and normalize slashes
        url = url.replace(/\/+/g, "/");

        // Remove duplicate Portfolio prefixes
        while (url.includes("/Portfolio/Portfolio/")) {
            url = url.replace("/Portfolio/Portfolio/", "/Portfolio/");
        }

        // Remove trailing slashes
        url = url.replace(/\/+$/, "");

        // Ensure Portfolio prefix
        if (!url.startsWith("/Portfolio/")) {
            url = url.startsWith("/")
                ? `/Portfolio${url}`
                : `/Portfolio/${url}`;
        }

        // Final cleanup of any double slashes
        return url.replace(/\/+/g, "/");
    }

    function fixAllAssetPaths() {
        // Fix stylesheet paths
        document.querySelectorAll('link[rel="stylesheet"]').forEach((link) => {
            const href = link.getAttribute("href");
            if (href) link.setAttribute("href", fixAssetPath(href));
        });

        // Fix image paths
        document.querySelectorAll("img[src]").forEach((img) => {
            const src = img.getAttribute("src");
            if (src) img.setAttribute("src", fixAssetPath(src));
        });

        // Fix video sources
        document.querySelectorAll("source[src]").forEach((source) => {
            const src = source.getAttribute("src");
            if (src) source.setAttribute("src", fixAssetPath(src));
        });

        // Fix anchor hrefs
        document.querySelectorAll("a[href]").forEach((a) => {
            const href = a.getAttribute("href");
            if (
                href &&
                !href.startsWith("http") &&
                !href.startsWith("mailto:") &&
                !href.startsWith("#")
            ) {
                a.setAttribute("href", fixAssetPath(href));
            }
        });

        // Fix background images in CSS
        document.querySelectorAll('[style*="url("]').forEach((el) => {
            const style = el.getAttribute("style");
            if (style) {
                el.setAttribute(
                    "style",
                    style.replace(
                        /url\(['"]?([^'")\s]+)['"]?\)/g,
                        (match, url) => `url('${fixAssetPath(url)}')`,
                    ),
                );
            }
        });
    }

    // Fix paths on initial load
    document.addEventListener("DOMContentLoaded", fixAllAssetPaths);

    // Fix paths after any dynamic content updates
    const observer = new MutationObserver(fixAllAssetPaths);
    observer.observe(document.documentElement, {
        childList: true,
        subtree: true,
    });
</script>

<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Fonts and Styles -->
<link
    rel="stylesheet"
    href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css"
/>
