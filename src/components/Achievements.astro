---
// Vous pouvez ajouter des props et des importations ici si nécessaire
---

<section class="achievements-section">
    <div class="achievements-container">
        <div class="achievements-header" data-aos="fade-up">
            <h2 class="achievements-title">Mes réalisations</h2>
            <div class="achievements-divider"></div>
            <p class="achievements-subtitle">
                Découvrez quelques statistiques sur mes projets et réalisations professionnelles
            </p>
        </div>

        <div class="achievements-grid">
            <div
                class="achievement-card"
                data-aos="fade-up"
                data-aos-delay="100"
            >
                <div class="achievement-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"></path>
                        <circle cx="9" cy="7" r="4"></circle>
                        <path d="M22 21v-2a4 4 0 0 0-3-3.87"></path>
                        <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                    </svg>
                </div>
                <div class="achievement-content">
                    <h3 class="achievement-number">
                        <span class="counter" data-target="15">0</span>+
                    </h3>
                    <p class="achievement-text">Clients satisfaits</p>
                </div>
            </div>

            <div
                class="achievement-card"
                data-aos="fade-up"
                data-aos-delay="200"
            >
                <div class="achievement-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M12 20h9"></path>
                        <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>
                    </svg>
                </div>
                <div class="achievement-content">
                    <h3 class="achievement-number">
                        <span class="counter" data-target="42">0</span>
                    </h3>
                    <p class="achievement-text">Projets complétés</p>
                </div>
            </div>

            <div
                class="achievement-card"
                data-aos="fade-up"
                data-aos-delay="300"
            >
                <div class="achievement-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path>
                        <line x1="16" y1="8" x2="2" y2="22"></line>
                        <line x1="17.5" y1="15" x2="9" y2="15"></line>
                    </svg>
                </div>
                <div class="achievement-content">
                    <h3 class="achievement-number">
                        <span class="counter" data-target="8">0</span>
                    </h3>
                    <p class="achievement-text">Années d'expérience</p>
                </div>
            </div>

            <div
                class="achievement-card"
                data-aos="fade-up"
                data-aos-delay="400"
            >
                <div class="achievement-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="12" cy="8" r="7"></circle>
                        <polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>
                    </svg>
                </div>
                <div class="achievement-content">
                    <h3 class="achievement-number">
                        <span class="counter" data-target="12">0</span>
                    </h3>
                    <p class="achievement-text">Reconnaissances</p>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    // Animation de compteur pour les nombres
    document.addEventListener('DOMContentLoaded', () => {
        const counters = document.querySelectorAll('.counter');
        const speed = 200; // La vitesse d'animation (ms)

        const animateCounter = (counter) => {
            const target = +counter.getAttribute('data-target');
            let count = 0;
            const increment = Math.ceil(target / (speed / 20)); // Diviser par 20 pour obtenir une animation fluide

            const updateCount = () => {
                count += increment;
                
                if (count >= target) {
                    counter.innerText = target;
                    return;
                }
                
                counter.innerText = count;
                setTimeout(updateCount, 20);
            };

            updateCount();
        };

        // Fonction pour vérifier si un élément est visible dans la fenêtre
        const isElementVisible = (el) => {
            const rect = el.getBoundingClientRect();
            return (
                rect.top >= 0 &&
                rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                rect.right <= (window.innerWidth || document.documentElement.clientWidth)
            );
        };

        // Observer pour démarrer l'animation lorsque les compteurs sont visibles
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const counter = entry.target;
                    animateCounter(counter);
                    observer.unobserve(counter); // Désinscrire après l'animation
                }
            });
        }, { threshold: 0.5 });

        // Observer chaque compteur
        counters.forEach(counter => {
            observer.observe(counter);
        });
    });
</script>

<style>
    .achievements-section {
        padding: 7rem 3rem;
        background: linear-gradient(to bottom, #f8fafc, #ffffff);
        position: relative;
        overflow: hidden;
    }

    .achievements-container {
        max-width: var(--max-width);
        margin: 0 auto;
        position: relative;
        z-index: 2;
    }

    .achievements-header {
        text-align: center;
        margin-bottom: 4rem;
    }

    .achievements-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--blue-900);
        margin-bottom: 1rem;
        position: relative;
        display: inline-block;
    }

    .achievements-title::after {
        content: "";
        position: absolute;
        bottom: -5px;
        left: 0;
        width: 100%;
        height: 2px;
        background: linear-gradient(
            90deg,
            transparent,
            var(--blue-500),
            transparent
        );
        animation: shimmer 2.5s infinite;
    }

    .achievements-divider {
        width: 80px;
        height: 4px;
        background: linear-gradient(90deg, var(--blue-600), var(--blue-400));
        margin: 0 auto 1.5rem;
        border-radius: 2px;
        box-shadow: 0 2px 8px rgba(var(--blue-rgb-500), 0.2);
    }

    .achievements-subtitle {
        color: var(--blue-700);
        font-size: 1.2rem;
        max-width: 600px;
        margin: 0 auto;
        line-height: 1.6;
    }

    .achievements-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 2rem;
    }

    .achievement-card {
        background: white;
        border-radius: 16px;
        padding: 2.5rem 1.5rem;
        text-align: center;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.05);
        border: 1px solid rgba(var(--blue-rgb-100), 0.5);
        transition: all 0.3s ease;
    }

    .achievement-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(var(--blue-rgb-500), 0.15);
        border-color: var(--blue-200);
    }

    .achievement-icon {
        width: 64px;
        height: 64px;
        margin: 0 auto 1.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--blue-50);
        border-radius: 50%;
        color: var(--blue-600);
        box-shadow: 0 5px 15px rgba(var(--blue-rgb-500), 0.15);
        transition: all 0.3s ease;
    }

    .achievement-card:hover .achievement-icon {
        background: linear-gradient(135deg, var(--blue-500), var(--blue-600));
        color: white;
    }

    .achievement-number {
        font-size: 3rem;
        font-weight: 700;
        color: var(--blue-900);
        margin-bottom: 0.75rem;
        line-height: 1;
    }

    .achievement-text {
        color: var(--blue-700);
        font-size: 1.1rem;
        font-weight: 500;
    }

    @keyframes shimmer {
        0% {
            background-position: -100% 0;
        }
        100% {
            background-position: 200% 0;
        }
    }

    @media (max-width: 1024px) {
        .achievements-grid {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @media (max-width: 768px) {
        .achievements-section {
            padding: 5rem 1.5rem;
        }

        .achievements-title {
            font-size: 2rem;
        }

        .achievements-subtitle {
            font-size: 1.1rem;
        }
    }

    @media (max-width: 480px) {
        .achievements-grid {
            grid-template-columns: 1fr;
        }
    }
</style>
